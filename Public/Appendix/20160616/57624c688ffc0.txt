#define MAX_ARG 8
struct command {
  int argc;
  char *argv[MAX_ARG];
};

#define MAX_COMMAND 8
struct command *commandv[MAX_COMMAND];
int commandc;

void parse_pipe(char *line)
{
}

void exec_command(struct command *command)
{
}

void exec_pipe(int index)
{
    int fd[2];
    pid_t pid;
    
    if (index == commandc - 1) {
        exec_command(commandv[index]);
        return;
    }
    
    pipe(fd);
    pid = fork();
    
    // 子进程执行管道的其余命令
    if (pid == 0) {
        // 重定向输入到管道
        exec_pipe(index + 1);
    }
    
    // 父进程执行管道的第一条命令
    // 重定向输出到管道
    exec_command(commandv[index]);
}

int main()
{
    parse_pipe("cat input.txt | wc -l");
    // commandc = 2
    // commandv[0] = {"cat", "input.txt"}
    // commandv[1] = {"wc", "-l"}
    
    exec_pipe(0);
}